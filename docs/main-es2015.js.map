{"version":3,"sources":["./src/app/artist-discography/artist-discography.component.html","./src/app/artist-discography/artist-discography.component.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/search-result/search-result.component.html","./src/app/search-result/search-result.component.ts","./src/environments/environment.ts","./src/app/view/view.component.ts","./src/app/view/view.component.html","./src/app/new-releases/new-releases.component.html","./src/app/new-releases/new-releases.component.ts","./src/app/favourites/favourites.component.html","./src/app/favourites/favourites.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/spotify-token.service.ts","./src/app/app.module.ts","./src/app/music-data.service.ts","./src/app/album/album.component.html","./src/app/album/album.component.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<h1>{{ artist.name }}</h1>\n<p>\n  Full discography for {{ artist.name }}<br />\n  Click the <strong>album cover</strong> for more information.<br />\n</p>\n<mat-card\n  [style.background]=\"\n    'url(' + artist.images[0].url + ') no-repeat center center'\n  \"\n  [style.background-size]=\"'cover'\"\n  [style.height]=\"'450px'\"\n>\n</mat-card>\n<br /><br />\n<h1>Full Discography</h1>\n\n<div fxLayout=\"row wrap\" fxLayout.xs=\"column\">\n  <!-- Single \"Responsive\" Card-->\n  <div fxFlex [style.margin]=\"'20px'\" *ngFor=\"let album of albums\">\n    <mat-card [style.min-width]=\"'200px'\">\n      <mat-card-header>\n        <mat-card-title>{{ album.name }}</mat-card-title>\n        <mat-card-subtitle>Album Title</mat-card-subtitle>\n      </mat-card-header>\n\n      <img\n        mat-card-image\n        class=\"album-cover\"\n        [routerLink]=\"['/album', album.id]\"\n        routerLinkActive=\"active\"\n        [src]=\"album.images[0].url\"\n        alt=\"album art\"\n      />\n      <strong>Release Date: </strong>{{ album.release_date }}<br />\n      <strong>Tracks: </strong>{{ album.total_tracks }}\n    </mat-card>\n  </div>\n  <!-- -->\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { MusicDataService } from '../music-data.service';\n@Component({\n  selector: 'app-artist-discography',\n  templateUrl: './artist-discography.component.html',\n  styleUrls: ['./artist-discography.component.css'],\n})\nexport class ArtistDiscographyComponent implements OnInit {\n  albums;//= albumData.albums.items;\n  artist;// = (artistData as any).default;\n  artistSub: any;\n  routeSub: any;\n  albumSub: any;\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: MusicDataService\n  ) {}\n\n  ngOnInit(): void {\n    this.routeSub = this.route.params.subscribe((params) => {\n      this.artistSub = this.dataService\n        .getArtistById(params.id)\n        .subscribe((data) => (this.artist = data));\n      this.albumSub = this.dataService\n        .getAlbumsByArtistId(params.id)\n        .subscribe((data) => {\n          const dup=new Set();\n          let newItems = data.items;\n          this.albums=newItems.filter(\n           // (item, index) => newItems.indexOf(item) === index\n           (album: { name: unknown }) => {\n            const duplicate = dup.has(album.name);\n            dup.add(album.name);\n            return !duplicate;\n          }\n         \n          );\n          \n        });\n    });\n  }\n  ngOnDestroy(): void {\n    this.artistSub.unsubscribe();\n    this.albumSub.unsubscribe();\n    this.routeSub.unsubscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>All about me - Ye Jin Kim</h4>\n<p> My name is Ye Jin Kim.<br>\n    I am currently in my fourth semester in\n    the Computer Programming & Analysis program and working towards an\n    Advanced Diploma at Seneca College. <br>\n    This is my assignment of WEB 422 course. For this assignment, I used\n    Angular!</p>","<div *ngIf=\"searchQuery\">\n  <h1>Results for: \"{{ searchQuery }}\"</h1>\n  <p>\n    The following is a list of artists matching the query.<br />\n    Click the <strong>artist image</strong> for more information.\n  </p>\n\n  <br />\n\n  <div class=\"content\">\n    <div fxLayout=\"row wrap\" fxLayout.xs=\"column\">\n      <!-- single result \"card\"-->\n      <div *ngFor=\"let artist of results\">\n        <div fxFlex [style.margin]=\"'20px'\">\n          <mat-card [style.min-width]=\"'200px'\">\n            <mat-card-header>\n              <mat-card-title>{{ artist.name }}</mat-card-title>\n              <mat-card-subtitle>Artist</mat-card-subtitle>\n            </mat-card-header>\n            <div *ngIf=\"artist.images\">\n              <img\n                routerLink=\"/artist/{{ artist.id }}\"\n                mat-card-image\n                class=\"album-cover\"\n                src=\"{{ artist.images[2].url }}\"\n                alt=\"artist art\"\n              />\n            </div>\n            <mat-card-content>\n              <strong>Followers: </strong>{{ artist.followers.total }}<br />\n              <strong>Popularity: </strong>{{ artist.popularity }}\n            </mat-card-content>\n          </mat-card>\n        </div>\n      </div>\n      <!-- -->\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MusicDataService } from '../music-data.service';\n@Component({\n  selector: 'app-search-result',\n  templateUrl: './search-result.component.html',\n  styleUrls: ['./search-result.component.css'],\n})\nexport class SearchResultComponent implements OnInit {\n  results: any;\n  searchQuery: any;\n  routeSub: any;\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: MusicDataService\n  ) {}\n\n  ngOnInit(): void {\n    this.routeSub = this.route.queryParams.subscribe((params) => {\n      this.searchQuery = params['q'];\n    });\n    this.dataService.searchArtists(this.searchQuery).subscribe((data) => {\n      this.results = data.artists.items.filter(\n        (item:any) => item.images.length > 0\n      );\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  clientID: \"41129a3794ad455eae8f54e61f70e8de\",\n  clientSecret: \"0adbad34e43e4da79f8b66402bf4f3a6\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>view works!</p>\n","<div class=\"content\">\n  <h1>New Releases</h1>\n  <p>\n    The following is a list of new releases.<br />\n    Click the <strong>album cover</strong> or <strong>artist name</strong> for\n    more information. <br />\n  </p>\n\n  <div fxLayout=\"row wrap\" fxLayout.xs=\"column\">\n    <!-- Single \"Responsive\" Card-->\n    <div fxFlex [style.margin]=\"'20px'\" *ngFor=\"let album of releases\">\n      <mat-card [style.min-width]=\"'200px'\">\n        <mat-card-header>\n          <mat-card-title>{{ album.name }}</mat-card-title>\n          <mat-card-subtitle>New Release</mat-card-subtitle>\n        </mat-card-header>\n       \n        <img\n          [routerLink]=\"['/album', album.id]\"\n          routerLinkActive=\"active\"\n          mat-card-image\n          class=\"album-cover\"\n          [src]=\"album.images[0].url\"\n          alt=\"album art\"\n        />\n        <strong>Release Date: </strong>{{ album.release_date }}<br />\n        <strong>Tracks: </strong>{{ album.total_tracks }}<br /><br />\n        <mat-card-content>\n          <mat-chip-list aria-label=\"Artist selection\">\n            <mat-chip\n              [routerLink]=\"['/artist', artist.id]\"\n              routerLinkActive=\"active\"\n              *ngFor=\"let artist of album.artists\"\n              >{{ artist.name }}</mat-chip\n            >\n          </mat-chip-list>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <!-- -->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { MusicDataService } from '../music-data.service';\n\n@Component({\n  selector: 'app-new-releases',\n  templateUrl: './new-releases.component.html',\n  styleUrls: ['./new-releases.component.css'],\n})\nexport class NewReleasesComponent implements OnInit {\n  releases: Array<object>;\n\n  constructor(private dataService: MusicDataService) {}\n\n  ngOnInit(): void {\n    this.dataService.getNewReleases().subscribe((data) => {\n      this.releases = data.albums.items;\n    });\n  }\n}\n","<h1>Favourites</h1>\n<p>\n  The following is a list of your favourite songs from various artists.<br />\n  Click the &nbsp;<mat-icon mat-list-icon>queue_music</mat-icon>&nbsp; icon to\n  <strong>remove</strong> a song from your list\n</p>\n\n<br />\n\n<mat-list>\n  <!-- single \"favourite\" card -->\n  <mat-list-item *ngFor=\"let track of favourites\">\n    <mat-icon mat-list-icon (click)=\"removeFromFavourites(track.id)\">queue_music</mat-icon>\n    <div mat-line>\n      <mat-card>\n        <mat-card-content\n          ><strong>{{ track.name }}</strong> - {{ track.duration }}<br /><br />\n          Artist(s):\n          <span *ngFor=\"let artist of track.artists\"\n            ><a routerLink=\"/artist/{{ artist.id }}\">{{ artist.name }}</a\n            >&nbsp;&nbsp;</span\n          >\n\n          <br />\n\n          Album:\n          <a routerLink=\"/album{{ track.album.id }}\"> {{ track.album.name }}</a\n          ><br />\n          <div *ngIf=\"track.preview_url\">\n            <br /><audio controls [src]=\"track.preview_url\"></audio>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </mat-list-item>\n  <!-- -->\n</mat-list>\n","import { Component, OnInit } from '@angular/core';\nimport { MusicDataService } from '../music-data.service';\n\n@Component({\n  selector: 'app-favourites',\n  templateUrl: './favourites.component.html',\n  styleUrls: ['./favourites.component.css'],\n})\nexport class FavouritesComponent implements OnInit {\n  favourites!: Array<any>;\n  constructor(private dataService: MusicDataService) {}\n\n  ngOnInit(): void {\n    this.dataService.getFavourites().subscribe((data) => {\n      this.favourites = data.tracks;\n    });\n  }\n\n  removeFromFavourites(id) {\n    this.dataService.removeFromFavourites(id).subscribe((data) => {\n      this.favourites = data.tracks;\n    });\n  }\n}\n","/*********************************************************************************\n *  WEB422 – Assignment 05\n *  I declare that this assignment is my own work in accordance with Seneca  Academic Policy.  No part of this\n *  assignment has been copied manually or electronically from any other source (including web sites) or\n *  distributed to other students.\n *\n *  Name: Ye Jin Kim Student ID: 163291180 Date: 3/25/2021\n *\n ********************************************************************************/\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'web422-a5';\n  searchString!: string;\n\n  constructor(private router: Router) {}\n\n  handleSearch() {\n    this.router.navigate(['/search'], {\n      queryParams: { q: this.searchString },\n    });\n    this.searchString = '';\n  }\n}\n","<!--https://pat-crawford-sdds.netlify.app/shared/winter-2021/web422/A4/app.component.html.txt-->\n\n<div class=\"navbar-container\">\n\n  <!-- Top navbar -->\n  <mat-toolbar class=\"navbar\" color=\"primary\">\n\n    <button mat-icon-button (click)=\"snav.toggle()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n\n    <a class=\"navbar-brand\" matTooltip=\"Home\">\n      <h1>\n        Seneca Music\n      </h1>\n    </a>\n\n    <span class=\"navbar-spacer\"></span>\n\n    <button mat-button [matMenuTriggerFor]=\"userMenu\">\n      <mat-icon>person</mat-icon>\n      <span fxShow fxHide.xs>\n        Ye Jin Kim\n      </span>\n    </button>\n    <mat-menu #userMenu=\"matMenu\" xPosition=\"before\" yPosition=\"above\" [overlapTrigger]=\"false\">\n\n      <a mat-menu-item>\n        <mat-icon>exit_to_app</mat-icon>\n        <span>Log out</span>\n      </a>\n\n    </mat-menu>\n\n  </mat-toolbar>\n\n  <mat-sidenav-container>\n    <!-- Side nav -->\n    <mat-sidenav #snav [opened]=\"false\" [mode]=\"'side'\" [fixedInViewport]=\"true\" fixedTopGap=\"56\">\n\n      <mat-nav-list>\n        <div>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Artist</mat-label>\n            <form (ngSubmit)='handleSearch()'><input matInput type=\"text\" name=\"searchString\"\n              [(ngModel)]='searchString'></form>\n            <mat-icon matSuffix>search</mat-icon>\n          </mat-form-field>\n        </div>\n\n\n        <a mat-list-item routerLink=\"/newReleases\"routerLinkActive=\"activeRoute\">\n          <mat-icon mat-list-icon>\n            library_music\n          </mat-icon>\n          <p mat-line> New Releases </p>\n        </a>\n\n        <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['favourites']\">\n          <mat-icon mat-list-icon>\n            favorite\n          </mat-icon>\n          <p mat-line> Favourites </p>\n        </a>\n\n        <mat-divider></mat-divider>\n\n        <a id=\"push-bottom\" mat-list-item routerLink=\"/about\"routerLinkActive=\"activeRoute\">\n          <mat-icon mat-list-icon>\n            info_outline\n          </mat-icon>\n          <p mat-line> About </p>\n        </a>\n      </mat-nav-list>\n\n    </mat-sidenav>\n    \n    <mat-sidenav-content class=\"sidenav-content\">\n      \n      <!-- Main content -->\n      <router-outlet></router-outlet> \n      <!-- ------------ -->\n      \n      <div class=\"bottom-spacer\"></div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>","import { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from './../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyTokenService implements OnDestroy {\n\n  private clientID = environment.clientID;\n  private clientSecret = environment.clientSecret;\n\n  private accessToken: string;\n  private accessTokenExpires: Date;\n  private tokenSub: any;\n\n  constructor(private http: HttpClient) { }\n\n  private getAccessToken(): Observable<any> {\n\n    return new Observable(o => {\n      let auth = btoa(`${this.clientID}:${this.clientSecret}`);\n      const authBody = new HttpParams().set('grant_type', 'client_credentials');\n\n      this.tokenSub = this.http.post<any>(\"https://accounts.spotify.com/api/token\", authBody.toString(), { headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': `Basic ${auth}` } }).subscribe(token => {\n        this.accessToken = token.access_token;\n        this.accessTokenExpires = new Date();\n        this.accessTokenExpires.setSeconds(this.accessTokenExpires.getSeconds() + token.expires_in);\n        o.next(this.accessToken)\n      });\n    });\n  }\n\n  getBearerToken(): Observable<any> {\n\n    if (!this.accessToken) { \n      // no access token, so get a fresh one\n      return this.getAccessToken();\n    } else { \n      if (new Date() < this.accessTokenExpires) { \n        // access token exists and is valid, so return it\n        return new Observable(o => o.next(this.accessToken));\n      } else { \n        // access token exists, but is no longer valid, so get a fresh one\n        return this.getAccessToken(); \n      }\n    }\n  }\n\n  ngOnDestroy():void{\n    this.tokenSub?.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ViewComponent } from './view/view.component';\nimport { AboutComponent } from './about/about.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { NewReleasesComponent } from './new-releases/new-releases.component';\nimport { AlbumComponent } from './album/album.component';\nimport { ArtistDiscographyComponent } from './artist-discography/artist-discography.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { SearchResultComponent } from './search-result/search-result.component';\nimport { FavouritesComponent } from './favourites/favourites.component';\n\n@NgModule({\n  declarations: [AppComponent, ViewComponent, AboutComponent, NotFoundComponent, NewReleasesComponent, AlbumComponent, ArtistDiscographyComponent, SearchResultComponent, FavouritesComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatProgressBarModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatListModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatChipsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    FormsModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { SpotifyTokenService } from './spotify-token.service';\n\nimport { mergeMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MusicDataService {\n  private favouritesList: Array<any> = [];\n\n  constructor(\n    private spotifyToken: SpotifyTokenService,\n    private http: HttpClient\n  ) {}\n\n  getNewReleases(): Observable<any> {\n    return this.spotifyToken.getBearerToken().pipe(\n      mergeMap((token) => {\n        return this.http.get<any>(\n          'https://api.spotify.com/v1/browse/new-releases',\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n      })\n    );\n  }\n\n  getArtistById(id: string): Observable<any> {\n    return this.spotifyToken.getBearerToken().pipe(\n      mergeMap((token) => {\n        return this.http.get<any>(\n          `https://api.spotify.com/v1/artists/${id}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n      })\n    );\n   \n  }\n\n  getAlbumsByArtistId(id: string): Observable<any> {\n    return this.spotifyToken.getBearerToken().pipe(\n      mergeMap((token) => {\n        return this.http.get<any>(\n          `https://api.spotify.com/v1/artists/${id}/albums?include_groups=album,single&limit=50`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n      })\n    );\n    // return this.http.get<any>(\n    //   `https://api.spotify.com/v1/artists/${id}/albums?include_groups=album,single&limit=50`\n    // );\n  }\n\n  getAlbumById(id: string): Observable<any> {\n    return this.spotifyToken.getBearerToken().pipe(\n      mergeMap((token) => {\n        return this.http.get<any>(\n          `https://api.spotify.com/v1/albums/${id}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n      })\n    );\n   // return this.http.get<any>(`https://api.spotify.com/v1/albums/${id}`);\n  }\n\n  searchArtists(searchString: string): Observable<any> {\n    return this.spotifyToken.getBearerToken().pipe(\n      mergeMap((token) => {\n        return this.http.get<any>(\n          `https://api.spotify.com/v1/search/?q=${searchString}&type=artist&limit=50`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n      })\n    );\n    // return this.http.get<any>(\n    //   `https://api.spotify.com/v1/search/?q=${searchString}&type=artist&limit=50`\n    // );\n  }\n\n  addToFavourites(id: string) {\n    if (id == null || !id || this.favouritesList.length >= 50) {\n      return false;\n    }\n    this.favouritesList.push(id);\n    return true;\n  }\n\n  removeFromFavourites(id: string): Observable<any> {\n    var i = this.favouritesList.indexOf(id);\n    this.favouritesList.splice(i, 1);\n    return this.getFavourites();\n  }\n\n  getFavourites(): Observable<any> {\n    var arr = this.favouritesList.join();\n    if (this.favouritesList.length > 0) {\n      return this.spotifyToken.getBearerToken().pipe(\n        mergeMap((token) => {\n          return this.http.get<any>(\n            `https://api.spotify.com/v1/tracks?ids=${arr}`,\n            { headers: { Authorization: `Bearer ${token}` } }\n          );\n        })\n      );\n      //return this.http.get<any>(`https://api.spotify.com/v1/tracks?ids=${arr}`);\n    } else if (this.favouritesList.length <= 0) {\n      return new Observable((o) => {\n        o.next([]);\n      });\n    }\n  }\n}\n","<h1>{{ album.name }}</h1>\n<p>Full track listing for {{ album.name }}<br />\nClick the <mat-icon mat-list-icon>queue_music</mat-icon> icon to <strong>add</strong> a song from your favourites list</p>\n\n<mat-card>\n  <mat-card-content fxLayout=\"row wrap\" fxLayout.xs=\"column\">\n    <div fxflex>\n      <img\n        [src]=\"album.images[1].url\"\n        alt=\"album cover\"\n        [style.margin]=\"'10px'\"\n        [style.max-width]=\"'90%'\"\n      />\n    </div>\n    <div fxFlex>\n      <div [style.min-width]=\"'300px'\" [style.margin]=\"'10px'\">\n        <strong>Record Label: </strong> {{ album.label }}<br />\n        <strong>Release Date: </strong> {{ album.release_date }}<br /><br />\n        <strong>Tracks:</strong> {{ album.total_tracks }}<br />\n        <strong>Popularity: </strong>{{ album.popularity }}<br /><br />\n\n        <mat-chip-list aria-label=\"Artist selection\">\n          <mat-chip\n            [routerLink]=\"['/artist', artist.id]\"\n            routerLinkActive=\"active\"\n            *ngFor=\"let artist of album.artists\"\n            >{{ artist.name }}</mat-chip\n          >\n        </mat-chip-list>\n        <br />\n\n        <div *ngFor=\"let copyright of album.copyrights\">\n          {{ copyright.text }}\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n<br /><br />\n<h2>Track Listing</h2>\n\n<mat-list>\n  <!-- Single \"Responsive\" Material List Item-->\n  <mat-list-item *ngFor=\"let track of album.tracks.items\">\n    <mat-icon mat-list-icon (click)=\"addToFavourites(track.id)\">queue_music</mat-icon>\n    <div mat-line>\n      <mat-card>\n        <mat-card-content>\n          {{ track.track_number }}: {{ track.name }} -\n          {{ (track.duration_ms / 60000).toFixed(2) }}\n          <!-- NOTE 3.34 was determined by using (duration_ms / 60000).toFixed(2) -->\n          <div *ngIf=\"track.preview_url\"><br /><audio controls [src]=\"track.preview_url\"></audio></div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </mat-list-item>\n  <!-- -->\n</mat-list>\n","import { Component, OnInit } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { MusicDataService } from '../music-data.service';\n@Component({\n  selector: 'app-album',\n  templateUrl: './album.component.html',\n  styleUrls: ['./album.component.css'],\n})\nexport class AlbumComponent implements OnInit {\n  album: any; // = (data as any).default;\n  routeSub: any;\n  albumSub: any;\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: MusicDataService,\n    private snackbar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.routeSub = this.route.params.subscribe((params) => {\n      this.albumSub = this.dataService\n        .getAlbumById(params.id)\n        .subscribe((data) => {\n          this.album = data;\n        });\n    });\n  }\n  addToFavourites(trackId) {\n    let result = this.dataService.addToFavourites(trackId);\n    if (result) {\n      this.snackbar.open('Adding to Favourites...', 'Done', { duration: 1500 });\n      //console.log(trackId);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Not found</h4>\n<p>This is the \"404 Page\" of the application.</p>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { AlbumComponent } from './album/album.component';\nimport { ArtistDiscographyComponent } from './artist-discography/artist-discography.component';\nimport { FavouritesComponent } from './favourites/favourites.component';\nimport { NewReleasesComponent } from './new-releases/new-releases.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SearchResultComponent } from './search-result/search-result.component';\n\nconst routes: Routes = [\n  {path: \"newReleases\", component:NewReleasesComponent},\n  {path:\"artist/:id\", component:ArtistDiscographyComponent},\n  {path:\"album/:id\", component:AlbumComponent},\n  {path: \"about\", component: AboutComponent},\n  {path: \"search\", component: SearchResultComponent},\n  {path: \"favourites\", component: FavouritesComponent},\n  {path: \"\", redirectTo: \"/newReleases\", pathMatch: \"full\"},\n  {path: \"**\", component:NotFoundComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}